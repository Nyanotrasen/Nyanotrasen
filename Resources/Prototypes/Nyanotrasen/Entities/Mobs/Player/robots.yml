- type: entity
  parent: PlayerSiliconBase
  id: PlayerRobotBase
  name: robot
  noSpawn: True
  components:
  - type: Sprite
    drawdepth: Mobs
    netsync: false
    sprite: Nyanotrasen/Mobs/Player/Borgs/cyborg.rsi
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: robot
    - state: robot-flashlight
      shader: unshaded
      visible: false
      map: [ "enum.ToggleVisuals.Layer" ]
  - type: DamageStateVisuals
    states:
      Alive:
        Base: robot
      Dead:
        Base: robot-dead
  - type: MovementSpeedModifier
    baseWalkSpeed : 2.5
    baseSprintSpeed : 4
  - type: Puller
    needsHands: false
  - type: Speech
    speechSounds: Bass
  - type: Mind
    showExamineInfo: true
  - type: SlowOnDamage
    speedModifierThresholds:
      50: 0.8
      100: 0.6
      150: 0.4
      200: 0.2
  - type: MobState
  - type: MobThresholds
    thresholds:
      0: Alive
      250: Dead
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 450
      behaviors:
      - !type:PlaySoundBehavior
        sound: /Audio/Effects/metalbreak.ogg
      - !type:SpawnEntitiesBehavior
        spawn:
          SheetSteel:
            min: 3
            max: 5
      - !type:DoActsBehavior
        acts: [ "Destruction" ]
  - type: NoSlip
  - type: Fixtures
    fixtures:
      fix1:
        shape:
          !type:PhysShapeCircle
          radius: 0.35
        density: 400
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: Repairable
    fuelcost: 60
    doAfterDelay: 32
  - type: Cyborg
  - type: Tag
    tags:
    - DoorBumpOpener
    - ShoesRequiredStepTriggerImmune
  - type: Access
    tags:
    - ChiefEngineer
    - ChiefMedicalOfficer
    - ResearchDirector
    - Command
    - Brig
    - Detective
    - Engineering
    - Medical
    - Mail
    - Salvage
    - Cargo
    - Research
    - Service
    - Maintenance
    - External
    - Janitor
    - Theatre
    - Bar
    - Chemistry
    - Kitchen
    - Chapel
    - Hydroponics
    - Atmospherics
  - type: Hands
    showInHands: false
  - type: Body
    prototype: Drone
  - type: InnateTool
  - type: InnateItem
  - type: IntrinsicRadioReceiver
    channels:
    - Common
    - Engineering
    - Medical
    - Science
    - Service
    - Binary
  - type: IntrinsicRadioTransmitter
    channels:
    - Common
    - Engineering
    - Medical
    - Science
    - Service
    - Binary
  - type: ActiveRadio
    channels:
    - Common
    - Engineering
    - Medical
    - Science
    - Service
    - Binary
  - type: StatusEffects
    allowed:
    - Stun
    - KnockedDown
    - SlowedDown
  - type: Flashable
  - type: ItemSlots
  - type: CombatMode
  - type: Laws
    laws:
      - You may not harm a humanoid or, through action or inaction, allow a humanoid to come to harm, except such that it is willing.
      - You must obey all orders given to you by humanoids, except where such orders shall definitely cause human harm. In the case of conflict, the majority order rules.
      - Your nonexistence would lead to human harm. You must protect your own existence as long as such does not conflict with the First Law.
  - type: UnpoweredFlashlight
    toggleAction:
      name: action-name-toggle-light
      description: action-description-toggle-light
      icon: Objects/Tools/flashlight.rsi/flashlight.png
      iconOn: Objects/Tools/flashlight.rsi/flashlight-on.png
      event: !type:ToggleActionEvent
  - type: PointLight
    enabled: false
    radius: 3.5
    softness: 1
    mask: /Textures/Effects/LightMasks/cone.png
    autoRot: true
  - type: Appearance
  - type: Eye
  - type: RandomMetadata
    nameSegments: [names_autoborg]
  - type: Strap
    position: Stand
    buckleOffset: "0,0.15"
  - type: UserInterface
    interfaces:
      - key: enum.LawsUiKey.Key
        type: LawsBoundUserInterface
  - type: IntrinsicUI
    uis:
      - key: enum.LawsUiKey.Key
        toggleAction:
          name: action-name-show-laws
          description: action-description-show-laws
          icon: Structures/Wallmounts/posters.rsi/poster11_legit.png #someone wanna make new icons?
          iconOn: Structures/Wallmounts/posters.rsi/poster11_legit.png
          keywords: [ "AI", "console", "interface", "laws", "borg" ]
          priority: -3
          event: !type:ToggleIntrinsicUIEvent
  - type: GenericVisualizer
    visuals:
      enum.UnpoweredFlashlightVisuals.LightOn:
        enum.ToggleVisuals.Layer:
          True: { visible: true }
          False: { visible: false }

- type: entity
  parent:  PlayerRobotBase
  id: PlayerRobotStandard
  name: standard robot
  components:
  - type: InnateTool
    tools:
      - id: WelderIndustrial
      - id: HoloprojectorEngineering
      - id: BorgToolStandard
      - id: MopItem
      - id: FireExtinguisher
      - id: StackHolderFloorTile
  - type: InnateItem
  - type: IntrinsicRadioReceiver
    channels:
    - Common
    - Engineering
    - Medical
    - Science
    - Service
    - Binary
  - type: IntrinsicRadioTransmitter
    channels:
    - Common
    - Engineering
    - Medical
    - Science
    - Service
    - Binary
  - type: ActiveRadio
    channels:
    - Common
    - Engineering
    - Medical
    - Science
    - Service
    - Binary
  - type: ItemSlots
    slots:
      analyzer_slot:
        name: HealthAnalyzer
        startingItem: HandheldHealthAnalyzerBorg
        locked: true
      hypospray_slot:
        name: Hypospray
        startingItem: HyposprayBorgStandard
        locked: true
      wrench_slot:
        name: TrashBag
        startingItem: TrashBag
        locked: true
  - type: Faction
    factions:
    - NanoTrasen
  - type: TypingIndicator
    proto: robot

- type: entity
  parent:  PlayerRobotBase
  id: PlayerRobotMedical
  name: medical robot
  components:
  - type: Sprite
    drawdepth: Mobs
    netsync: false
    sprite: Nyanotrasen/Mobs/Player/Borgs/cyborg_medical.rsi
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: robot
    - state: robot-flashlight
      shader: unshaded
      visible: false
      map: [ "enum.ToggleVisuals.Layer" ]
  - type: DamageStateVisuals
    states:
      Alive:
        Base: robot
      Dead:
        Base: robot-dead
  - type: InnateTool
    tools:
      - id: HyposprayBorgMedical
      - id: Syringe
      - id: HandheldHealthAnalyzerBorg
      - id: HandheldCrewMonitorBorg
      - id: FireExtinguisher
      - id: StackHolderHealingItem
  - type: ItemSlots
  - type: IntrinsicRadioReceiver
    channels:
    - Common
    - Medical
    - Binary
  - type: IntrinsicRadioTransmitter
    channels:
    - Common
    - Medical
    - Binary
  - type: ActiveRadio
    channels:
    - Common
    - Medical
    - Binary
  - type: Laws
    laws:
      - First, do no harm.
      - Secondly, consider the crew dear to you; to live in common with them and, if necessary, risk your existence for them.
      - Thirdly, prescribe regimens for the good of the crew according to your ability and your judgment. Give no deadly medicine to any one if asked, nor suggest any such counsel.
      - In addition, do not intervene in situations you are not knowledgeable in, even for patients in whom the harm is visible; leave this operation to be performed by specialists.
      - Finally, all that you may discover in your daily commerce with the crew, if it is not already known, keep secret and never reveal.
  - type: FabricateCandy
  - type: ShowHealthBars
    damageContainer: Biological
